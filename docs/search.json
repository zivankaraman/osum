[{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Before you start","text":"CDSE package R developed allow access ‘Copernicus Data Space Ecosystem’ data services R. 'Copernicus Data Space Ecosystem', deployed 2023, offers access EO data collection Copernicus missions, discovery download capabilities numerous data processing tools. particular, ‘Sentinel Hub’ API provides access multi-spectral multi-temporal big data satellite imagery service, capable fully automated, real-time processing distribution remote sensing data related EO products. Users can use APIs retrieve satellite data AOI specific time range full archives matter seconds. working application EO area interest relatively small compared image tiles distributed Copernicus (100 x 100 km), allows retrieve just portion image interest rather downloading huge tile image file processing locally. goal CDSE package provide easy access functionality R. main functions allow search catalog available imagery Sentinel-1, Sentinel-2, Sentinel-3, Sentinel-5 missions, process download images area interest time range various formats. functions might added subsequent releases package.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"accessing-cdse-data-and-services","dir":"Articles","previous_headings":"","what":"Accessing CDSE data and services","title":"Before you start","text":"Access 'Copernicus Data Space Ecosystem' free, register use API. can create free account explained User registration authentication. free account limitations quotas applied , sufficient individual users. details provided Quotas Limitations.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"api-authentication","dir":"Articles","previous_headings":"","what":"API authentication","title":"Before you start","text":"API functions require specific authentication. API uses OAuth2 Authentication requires access token. essence, piece information add requests server knows ’s . able request token, need register OAuth Client account settings. obtain client credentials - client id client secret. use client credentials authenticate API. Make sure copy personal OAuth secret, able see ! can find details documentation page dedicated API authentication.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"storing-client-credentials","dir":"Articles","previous_headings":"","what":"Storing client credentials","title":"Before you start","text":"store client credentials securely. hard-code (include clear text) scripts, particularly scripts shared others. Don’t save repository (like Git) shared folder. can course provide credentials every time needed, cumbersome approach. simple way keep persistently available store system environment variables. can achieved defining personal project-level .Renviron file. recommend method simplicity use examples. also set environment variables Sys.setenv(), note persistent; values lost R session terminates. Another option store global options(), typically personal .Rprofile. two options require name-value pairs, example, CDSE_ID = \"yourid\" CDSE_SECRET = \"yoursecret\". can find information dealing sensitive information R Managing secrets.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"oauth-authentication-client","dir":"Articles","previous_headings":"","what":"OAuth authentication client","title":"Before you start","text":"recommended way authenticate CDSE API use httr2_oauth_client object (httr2 package) returned GetOAuthClient function, shown . provide client credentials arguments function. returned object passed client argument functions requiring authentication. underlying services httr2 package automatically take care authentication lifecycle management (refreshing token, etc.). credentials obfuscated output. However, noted object returned GetOAuthClient function validated backend. credentials provided checked first time object used query. Therefore, even GetOAuthClient function raise error assume credentials accepted backend. demonstrate , can provide dummy id, secret, URL, error raised stage.","code":"id <- Sys.getenv(\"CDSE_ID\") secret <- Sys.getenv(\"CDSE_SECRET\") OAuthClient <- GetOAuthClient(id = id, secret = secret) class(OAuthClient) #> [1] \"httr2_oauth_client\" OAuthClient #> <httr2_oauth_client> #> name: x9x99xx99x9xx99xx99xx9xx99x99x99 #> id: xx-9x999x9x-9999-999x-xxxx-x9999x99x99x #> secret: <REDACTED> #> token_url: https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token #> auth: oauth_client_req_auth_header id <- \"my_dummy_id\" secret <- \"my_dummy_secret\" OAuthClient <- GetOAuthClient(id = id, secret = secret, url = \"https://my_dummy_url.org\") class(OAuthClient) #> [1] \"httr2_oauth_client\" OAuthClient #> <httr2_oauth_client> #> name: a43e08ed613f62d6ca1af36d4230ccf6 #> id: my_dummy_id #> secret: <REDACTED> #> token_url: https://my_dummy_url.org #> auth: oauth_client_req_auth_header"},{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"oauth-authentication-token","dir":"Articles","previous_headings":"","what":"OAuth authentication token","title":"Before you start","text":"order able check immediately credentials work correctly, provided another authentication function called GetOAuthToken. takes arguments mentioned GetOAuthClient function, verifies credentials immediately. successful, returns connection token, (long) string can passed token argument functions requiring authentication. credentials refused backend, error raised. Please case must explicitly take care token lifecycle management. therefore recommend use function test credentials work, prefer passing object returned GetOAuthClient client argument functions CDSE package require authentication. token obfuscated shortened output.","code":"id <- Sys.getenv(\"CDSE_ID\") secret <- Sys.getenv(\"CDSE_SECRET\") OAuthToken <- GetOAuthToken(id = id, secret = secret) class(OAuthToken) #> [1] \"character\" OAuthToken #> [1] \"xxXxxXxxXxXXXxX9XxXxXxX9xXXxXxXxxXXxxxx9xxXxX9XXXXx9X9xXxX9XxXXXxxX9xXXXxx......\""},{"path":"https://zivankaraman.github.io/osum/articles/AfterYouStart.html","id":"note-for-windows-users","dir":"Articles","previous_headings":"","what":"Note for Windows users","title":"Before you start","text":"Windows systems, depending network security settings, things might work box. get error connecting CDSE API complaining SSL/TLS handshake problem, try setting environment variable CURL_SSL_BACKEND openssl using functions CDSE package. can restart R session, type Sys.setenv(CURL_SSL_BACKEND = \"openssl\") using CDSE package. Even better, can permanently set environment variable .Renviron file (adding line CURL_SSL_BACKEND = \"openssl\") setting Windows system settings environment variables. can find information issue .","code":""},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"After you start","text":"CDSE package R developed allow access ‘Copernicus Data Space Ecosystem’ data services R. 'Copernicus Data Space Ecosystem', deployed 2023, offers access EO data collection Copernicus missions, discovery download capabilities numerous data processing tools. particular, ‘Sentinel Hub’ API provides access multi-spectral multi-temporal big data satellite imagery service, capable fully automated, real-time processing distribution remote sensing data related EO products. Users can use APIs retrieve satellite data AOI specific time range full archives matter seconds. working application EO area interest relatively small compared image tiles distributed Copernicus (100 x 100 km), allows retrieve just portion image interest rather downloading huge tile image file processing locally. goal CDSE package provide easy access functionality R. main functions allow search catalog available imagery Sentinel-1, Sentinel-2, Sentinel-3, Sentinel-5 missions, process download images area interest time range various formats. functions might added subsequent releases package.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"accessing-cdse-data-and-services","dir":"Articles","previous_headings":"","what":"Accessing CDSE data and services","title":"After you start","text":"Access 'Copernicus Data Space Ecosystem' free, register use API. can create free account explained User registration authentication. free account limitations quotas applied , sufficient individual users. details provided Quotas Limitations.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"api-authentication","dir":"Articles","previous_headings":"","what":"API authentication","title":"After you start","text":"API functions require specific authentication. API uses OAuth2 Authentication requires access token. essence, piece information add requests server knows ’s . able request token, need register OAuth Client account settings. obtain client credentials - client id client secret. use client credentials authenticate API. Make sure copy personal OAuth secret, able see ! can find details documentation page dedicated API authentication.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"storing-client-credentials","dir":"Articles","previous_headings":"","what":"Storing client credentials","title":"After you start","text":"store client credentials securely. hard-code (include clear text) scripts, particularly scripts shared others. Don’t save repository (like Git) shared folder. can course provide credentials every time needed, cumbersome approach. simple way keep persistently available store system environment variables. can achieved defining personal project-level .Renviron file. recommend method simplicity use examples. also set environment variables Sys.setenv(), note persistent; values lost R session terminates. Another option store global options(), typically personal .Rprofile. two options require name-value pairs, example, CDSE_ID = \"yourid\" CDSE_SECRET = \"yoursecret\". can find information dealing sensitive information R Managing secrets.","code":""},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"oauth-authentication-client","dir":"Articles","previous_headings":"","what":"OAuth authentication client","title":"After you start","text":"recommended way authenticate CDSE API use httr2_oauth_client object (httr2 package) returned GetOAuthClient function, shown . provide client credentials arguments function. returned object passed client argument functions requiring authentication. underlying services httr2 package automatically take care authentication lifecycle management (refreshing token, etc.). credentials obfuscated output. However, noted object returned GetOAuthClient function validated backend. credentials provided checked first time object used query. Therefore, even GetOAuthClient function raise error assume credentials accepted backend. demonstrate , can provide dummy id, secret, URL, error raised stage.","code":"id <- Sys.getenv(\"CDSE_ID\") secret <- Sys.getenv(\"CDSE_SECRET\") OAuthClient <- GetOAuthClient(id = id, secret = secret) class(OAuthClient) #> [1] \"httr2_oauth_client\" OAuthClient #> <httr2_oauth_client> #> name: x9x99xx99x9xx99xx99xx9xx99x99x99 #> id: xx-9x999x9x-9999-999x-xxxx-x9999x99x99x #> secret: <REDACTED> #> token_url: https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token #> auth: oauth_client_req_auth_header id <- \"my_dummy_id\" secret <- \"my_dummy_secret\" OAuthClient <- GetOAuthClient(id = id, secret = secret, url = \"https://my_dummy_url.org\") class(OAuthClient) #> [1] \"httr2_oauth_client\" OAuthClient #> <httr2_oauth_client> #> name: a43e08ed613f62d6ca1af36d4230ccf6 #> id: my_dummy_id #> secret: <REDACTED> #> token_url: https://my_dummy_url.org #> auth: oauth_client_req_auth_header"},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"oauth-authentication-token","dir":"Articles","previous_headings":"","what":"OAuth authentication token","title":"After you start","text":"order able check immediately credentials work correctly, provided another authentication function called GetOAuthToken. takes arguments mentioned GetOAuthClient function, verifies credentials immediately. successful, returns connection token, (long) string can passed token argument functions requiring authentication. credentials refused backend, error raised. Please case must explicitly take care token lifecycle management. therefore recommend use function test credentials work, prefer passing object returned GetOAuthClient client argument functions CDSE package require authentication. token obfuscated shortened output.","code":"id <- Sys.getenv(\"CDSE_ID\") secret <- Sys.getenv(\"CDSE_SECRET\") OAuthToken <- GetOAuthToken(id = id, secret = secret) class(OAuthToken) #> [1] \"character\" OAuthToken #> [1] \"xxXxxXxxXxXXXxX9XxXxXxX9xXXxXxXxxXXxxxx9xxXxX9XXXXx9X9xXxX9XxXXXxxX9xXXXxx......\""},{"path":"https://zivankaraman.github.io/osum/articles/BeforeYouStart.html","id":"note-for-windows-users","dir":"Articles","previous_headings":"","what":"Note for Windows users","title":"After you start","text":"Windows systems, depending network security settings, things might work box. get error connecting CDSE API complaining SSL/TLS handshake problem, try setting environment variable CURL_SSL_BACKEND openssl using functions CDSE package. can restart R session, type Sys.setenv(CURL_SSL_BACKEND = \"openssl\") using CDSE package. Even better, can permanently set environment variable .Renviron file (adding line CURL_SSL_BACKEND = \"openssl\") setting Windows system settings environment variables. can find information issue .","code":""},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introduction to osum","text":"R became available, heavy user S-PLUS™ software, commercial declination R’s ancestor S. practical function called objects.summary, list objects environment tabular form (basically data.frame) interesting attributes including class, mode, dimensions, size. couldn’t find equivalent R, wrote one 😊","code":""},{"path":[]},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"stable-version","dir":"Articles","previous_headings":"Installation","what":"Stable version","title":"Introduction to osum","text":"can install current stable version osum CRAN: Windows macOS binary packages available .","code":"install.packages(\"osum\")"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"development-version","dir":"Articles","previous_headings":"Installation","what":"Development version","title":"Introduction to osum","text":"can install development version osum including latest features GitHub:","code":"require(remotes) install_github(\"zivankaraman/osum\")"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"Introduction to osum","text":"First, need populate session environment objects. default, environment call objects.summary used, .GlobalEnv. hidden objects shown default. One provide argument .objects=TRUE see (unlike .names argument ls function) objects.summary called inside function, calling function’s environment used default.","code":"a <- month.name b <- sample(c(\"FALSE\", \"TRUE\"), size = 5, replace = TRUE) cars <- mtcars .hidden <- -1L .secret <- \"Shhht!\" x1 <- rnorm(n = 10) x2 <- runif(n = 20) x3 <- rbinom(n = 30, size = 10, prob = 0.5) lst <- list(first = x1, second = x2, third = x3) fun <- function(x) {sqrt(x)} objects.summary() #>      data.class storage.mode      mode    typeof  extent object.size #> a     character    character character character      12         880 #> b     character    character character character       5         208 #> cars data.frame         list      list      list 32 x 11        7208 #> fun    function     function  function   closure       1        4552 #> lst        list         list      list      list       3        1000 #> x1      numeric       double   numeric    double      10         176 #> x2      numeric       double   numeric    double      20         208 #> x3      numeric      integer   numeric   integer      30         176 objects.summary(all.objects = TRUE) #>              data.class storage.mode      mode    typeof  extent object.size #> .hidden         numeric      integer   numeric   integer       1          56 #> .Random.seed    numeric      integer   numeric   integer     626        2552 #> .secret       character    character character character       1         112 #> a             character    character character character      12         880 #> b             character    character character character       5         208 #> cars         data.frame         list      list      list 32 x 11        7208 #> fun            function     function  function   closure       1        4552 #> lst                list         list      list      list       3        1000 #> x1              numeric       double   numeric    double      10         176 #> x2              numeric       double   numeric    double      20         208 #> x3              numeric      integer   numeric   integer      30         176 # shows an empty list because inside myfunc no variables are defined myfunc <- function() {objects.summary()} myfunc() #> [1] data.class   storage.mode mode         typeof       extent       #> [6] object.size  #> <0 rows> (or 0-length row.names) # define a local variable inside myfunc myfunc <- function() {y <- 1; objects.summary()} myfunc() #>   data.class storage.mode    mode typeof extent object.size #> y    numeric       double numeric double      1          56"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"restricting-the-objects-list","dir":"Articles","previous_headings":"Basic Usage","what":"Restricting the Objects List","title":"Introduction to osum","text":"can limit output objects names matching regular expression provided pattern argument. Alternatively, can provide character vector naming objects summarize names argument.","code":"objects.summary(pattern = \"^x\") #>    data.class storage.mode    mode  typeof extent object.size #> x1    numeric       double numeric  double     10         176 #> x2    numeric       double numeric  double     20         208 #> x3    numeric      integer numeric integer     30         176 objects.summary(names = c(\"a\", \"b\")) #>   data.class storage.mode      mode    typeof extent object.size #> a  character    character character character     12         880 #> b  character    character character character      5         208"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"where-to-look-for-objects","dir":"Articles","previous_headings":"","what":"Where to Look for Objects?","title":"Introduction to osum","text":"can list objects environment, just current environment. environment can provided integer indicating position search list character giving name environment search list. can also explicitly provide environment. Unless explicit environment provided, argument designate element search list. However, character form “package:pkg_name” package named “pkg_name” installed, silently loaded, objects retrieved, unloaded function exits. Depending time takes load package, execution might slower getting information attached package.","code":"idx <- grep(\"package:graphics\", search()) objects.summary(idx, pattern = \"^plot\") #>               data.class storage.mode     mode  typeof extent object.size #> plot            function     function function closure      1        1408 #> plot.default    function     function function closure      1      127632 #> plot.design     function     function function closure      1      479960 #> plot.function   function     function function closure      1       64880 #> plot.new        function     function function closure      1       17880 #> plot.window     function     function function closure      1       11136 #> plot.xy         function     function function closure      1       75352 objects.summary(\"package:graphics\", pattern = \"^plot\") #>               data.class storage.mode     mode  typeof extent object.size #> plot            function     function function closure      1        1408 #> plot.default    function     function function closure      1      127632 #> plot.design     function     function function closure      1      479960 #> plot.function   function     function function closure      1       64880 #> plot.new        function     function function closure      1       17880 #> plot.window     function     function function closure      1       11136 #> plot.xy         function     function function closure      1       75352 e <- new.env() e$a <- 1:10 e$b <- rnorm(25) e$df <- iris e$arr <- iris3 objects.summary(e) #>     data.class storage.mode    mode  typeof     extent object.size #> a      numeric      integer numeric integer         10          96 #> arr      array       double numeric  double 50 x 4 x 3        5816 #> b      numeric       double numeric  double         25         248 #> df  data.frame         list    list    list    150 x 5        7256 # check if the package foreign is attached length(grep(\"package:foreign\", search())) > 0L #> [1] FALSE objects.summary(\"package:foreign\", pattern = \"^write\") #>               data.class storage.mode     mode  typeof extent object.size #> write.arff      function     function function closure      1      234168 #> write.dbf       function     function function closure      1      308496 #> write.dta       function     function function closure      1      224872 #> write.foreign   function     function function closure      1       12720 # check if the package foreign is attached length(grep(\"package:foreign\", search())) > 0L #> [1] FALSE"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"selecting-information-to-display","dir":"Articles","previous_headings":"","what":"Selecting Information to Display","title":"Introduction to osum","text":"don’t need display attributes, argument controls information returned. Partial matching used, enough initial letters string element needed guarantee unique recognition. example, “data[.class]”, “stor[age.mode]”, “ext[ent]”, “obj[ect.size]”. fact, just providing first letter sufficient, since possible values start different letter. order columns summary respects order names listed argument. noted attributes storage.mode, mode, typeof somewhat redundant, can select relevant . can set personal preferences using osum.options function, explained Options.","code":"objects.summary(what = c(\"data.class\", \"storage.mode\", \"extent\", \"object.size\")) #>      data.class storage.mode  extent object.size #> a     character    character      12         880 #> b     character    character       5         208 #> cars data.frame         list 32 x 11        7208 #> fun    function     function       1        4552 #> idx     numeric      integer       1          56 #> lst        list         list       3        1000 #> x1      numeric       double      10         176 #> x2      numeric       double      20         208 #> x3      numeric      integer      30         176 objects.summary(what = c(\"data\", \"stor\", \"ext\", \"obj\")) #>      data.class storage.mode  extent object.size #> a     character    character      12         880 #> b     character    character       5         208 #> cars data.frame         list 32 x 11        7208 #> fun    function     function       1        4552 #> idx     numeric      integer       1          56 #> lst        list         list       3        1000 #> x1      numeric       double      10         176 #> x2      numeric       double      20         208 #> x3      numeric      integer      30         176 objects.summary(what = c(\"m\", \"s\", \"t\", \"o\", \"d\", \"e\")) #>           mode storage.mode    typeof object.size data.class  extent #> a    character    character character         880  character      12 #> b    character    character character         208  character       5 #> cars      list         list      list        7208 data.frame 32 x 11 #> fun   function     function   closure        4552   function       1 #> idx    numeric      integer   integer          56    numeric       1 #> lst       list         list      list        1000       list       3 #> x1     numeric       double    double         176    numeric      10 #> x2     numeric       double    double         208    numeric      20 #> x3     numeric      integer   integer         176    numeric      30"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"filtering-objects","dir":"Articles","previous_headings":"","what":"Filtering Objects","title":"Introduction to osum","text":"subset objects environment selected summary specified either explicit vector names provided argument names, combination subsetting criteria pattern (seen Restricting Objects List), data.class, storage.mode, mode, typeof. argument names given, criteria ignored. one criterion given, objects satisfy selected. absence names criteria, objects selected. Objects can one class, first class element used default. Specifying .classes=TRUE allows consider entire class vector object, selection based argument data.class returned summary. Besides simple filtering criteria values attributes, can also filter logical expression indicating elements (rows) keep. expression evaluated data frame object attributes, columns referred (unquoted attribute name) variables expression (unlike select argument base subset function). can particularly helpful want exclude values, avoiding explicit listing (possible) values, shown example . filter expression can involve one attribute. can also quite complex, long yields logical value every object (row).","code":"objects.summary(\"package:datasets\", pattern = \"^[sU]\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"),                 data.class = c(\"data.frame\", \"matrix\")) #>                       data.class typeof  extent object.size #> sleep                 data.frame   list  20 x 3        2984 #> stack.x                   matrix double  21 x 3        1168 #> stackloss             data.frame   list  21 x 4        1792 #> state.x77                 matrix double  50 x 8        7672 #> swiss                 data.frame   list  47 x 6        6464 #> USArrests             data.frame   list  50 x 4        5736 #> USJudgeRatings        data.frame   list 43 x 12        9328 #> USPersonalExpenditure     matrix double   5 x 5        1448 objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"), data.class = \"array\") #>       data.class typeof     extent object.size #> iris3      array double 50 x 4 x 3        5816 objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"),                  all.classes = TRUE, data.class = \"array\") #>                         data.class typeof     extent object.size #> euro.cross            matrix, .... double    11 x 11        2944 #> EuStockMarkets        mts, ts,.... double   1860 x 4       60824 #> freeny.x              matrix, .... double     39 x 4        2008 #> iris3                        array double 50 x 4 x 3        5816 #> Seatbelts             mts, ts,.... double    192 x 8       13872 #> stack.x               matrix, .... double     21 x 3        1168 #> state.x77             matrix, .... double     50 x 8        7672 #> USPersonalExpenditure matrix, .... double      5 x 5        1448 #> VADeaths              matrix, .... double      5 x 4        1264 #> volcano               matrix, .... double    87 x 61       42672 #> WorldPhones           matrix, .... double      7 x 7        1800 objects.summary(\"package:grDevices\", filter = mode != \"function\") #>             data.class storage.mode      mode    typeof extent object.size #> blues9       character    character character character      9         680 #> colorspaces       list         list      list      list      6      478024 #> Hershey           list         list      list      list      3        2024 objects.summary(\"package:datasets\", filter = mode != storage.mode)[1:10, ] #>               data.class storage.mode    mode  typeof  extent object.size #> airmiles              ts       double numeric  double      24         656 #> AirPassengers         ts       double numeric  double     144        1616 #> austres               ts       double numeric  double      89        1176 #> BJsales               ts       double numeric  double     150        1664 #> BJsales.lead          ts       double numeric  double     150        1664 #> co2                   ts       double numeric  double     468        4208 #> crimtab            table      integer numeric integer 42 x 22        8504 #> discoveries           ts       double numeric  double     100        1264 #> euro             numeric       double numeric  double      11        1080 #> euro.cross        matrix       double numeric  double 11 x 11        2944 objects.summary(\"package:datasets\", all.classes = TRUE,                  filter = sapply(data.class, length) > 2L) #>                  data.class storage.mode    mode typeof   extent object.size #> ChickWeight    nfnGroup....         list    list   list  578 x 4       22696 #> CO2            nfnGroup....         list    list   list   84 x 5        9976 #> DNase          nfnGroup....         list    list   list  176 x 3        8256 #> EuStockMarkets mts, ts,....       double numeric double 1860 x 4       60824 #> Indometh       nfnGroup....         list    list   list   66 x 3        5904 #> Loblolly       nfnGroup....         list    list   list   84 x 3       12120 #> Orange         nfnGroup....         list    list   list   35 x 3        5232 #> Seatbelts      mts, ts,....       double numeric double  192 x 8       13872 #> Theoph         nfnGroup....         list    list   list  132 x 5       10000"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"sorting-objects","dir":"Articles","previous_headings":"","what":"Sorting Objects","title":"Introduction to osum","text":"default, object entries (printed rows) summary sorted alphabetically object name. providing order argument, can sorted column(s). order argument (unquoted) column names. numeric columns, one can precede name “-” sort descending order, expression enclosed parentheses (see examples). sort one column, expression must provided vector c(., .) (see examples). Feature inspired standard R order function. noted although extent default printed (specific print method objects class objects.summary) product dimensions (d1 x d2), internally stored list, allows sorting number rows columns, example. entries sorted ascending order default. can sorted descending order specifying reverse=TRUE. noted objects summary can filtered /sorted columns part summary (.e. listed argument).","code":"# filter on 'mode' and sort on 'data.class' objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"), mode = \"numeric\",                  order = data.class)[1:10, ] #>                       data.class  typeof     extent object.size #> iris3                      array  double 50 x 4 x 3        5816 #> UScitiesD                   dist integer         45        2392 #> eurodist                    dist  double        210        3688 #> state.region              factor integer         50         904 #> state.division            factor integer         50        1392 #> USPersonalExpenditure     matrix  double      5 x 5        1448 #> WorldPhones               matrix  double      7 x 7        1800 #> volcano                   matrix  double    87 x 61       42672 #> VADeaths                  matrix  double      5 x 4        1264 #> euro.cross                matrix  double    11 x 11        2944 # filter on 'mode' and sort (descending) on 'object.size' objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"), mode = \"numeric\",                  order = (-object.size))[1:10, ] #>                data.class  typeof     extent object.size #> treering               ts  double       7980       64304 #> EuStockMarkets        mts  double   1860 x 4       60824 #> volcano            matrix  double    87 x 61       42672 #> sunspot.month          ts  double       3177       25880 #> sunspots               ts  double       2820       23024 #> Seatbelts             mts  double    192 x 8       13872 #> crimtab             table integer    42 x 22        8504 #> state.x77          matrix  double     50 x 8        7672 #> iris3               array  double 50 x 4 x 3        5816 #> precip            numeric  double         70        5560 objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"),                   order = c(data.class, -object.size))[1:10, ] #>                data.class    typeof     extent object.size #> iris3               array    double 50 x 4 x 3        5816 #> state.name      character character         50        3496 #> state.abb       character character         50        3248 #> quakes         data.frame      list   1000 x 5       33232 #> infert         data.frame      list    248 x 8       16064 #> attenu         data.frame      list    182 x 5       15648 #> randu          data.frame      list    400 x 3       10584 #> USJudgeRatings data.frame      list    43 x 12        9328 #> morley         data.frame      list    100 x 3        8576 #> iris           data.frame      list    150 x 5        7256 # get all two-dimensional objects of from the datasets package, with more than 7 columns,  # sorted by number on columns (ascending) and then on number of rows (descending)  objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"),                  filter = sapply(extent, length) == 2L & sapply(extent, \"[\", 2L) > 7L,                 order = c(sapply(extent, \"[\", 2L), -sapply(extent, \"[\", 1L))) #>                    data.class  typeof  extent object.size #> infert             data.frame    list 248 x 8       16064 #> Seatbelts                 mts  double 192 x 8       13872 #> state.x77              matrix  double  50 x 8        7672 #> anscombe           data.frame    list  11 x 8        2592 #> occupationalStatus      table integer   8 x 8        2288 #> mtcars             data.frame    list 32 x 11        7208 #> euro.cross             matrix  double 11 x 11        2944 #> USJudgeRatings     data.frame    list 43 x 12        9328 #> crimtab                 table integer 42 x 22        8504 #> volcano                matrix  double 87 x 61       42672 # get five biggest objects from package datasets objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\"),                  reverse=TRUE)[1:10, ] #>                       data.class  typeof  extent object.size #> WWWusage                      ts  double     100        1264 #> WorldPhones               matrix  double   7 x 7        1800 #> women                 data.frame    list  15 x 2        1104 #> warpbreaks            data.frame    list  54 x 3        2944 #> volcano                   matrix  double 87 x 61       42672 #> VADeaths                  matrix  double   5 x 4        1264 #> uspop                         ts  double      19         616 #> USPersonalExpenditure     matrix  double   5 x 5        1448 #> USJudgeRatings        data.frame    list 43 x 12        9328 #> UScitiesD                   dist integer      45        2392 objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\"), pattern = \"st\",                  filter = mode %in% c(\"list\", \"numeric\"), order = object.size) #>                data.class  typeof extent #> stack.loss        numeric  double     21 #> state.area        numeric  double     50 #> state.region       factor integer     50 #> stack.x            matrix  double 21 x 3 #> austres                ts  double     89 #> state.center         list    list      2 #> state.division     factor integer     50 #> stackloss      data.frame    list 21 x 4 #> eurodist             dist  double    210 #> USArrests      data.frame    list 50 x 4 #> state.x77          matrix  double 50 x 8"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"printing-and-summarizing","dir":"Articles","previous_headings":"","what":"Printing and Summarizing","title":"Introduction to osum","text":"objects.summary function creates object class objects.summary, extension data.frame class. purpose class able propose custom print summary methods. number rows printed can limited max.rows argument, allows straightforward control max argument print.data.frame. .classes argument set TRUE, entire class vector returned, data.class column list character vectors. data printed, output limited fixed number characters (12 default), longer strings shown e.g. “matrix, …” “nfnGroup….”. data.class.width argument print method allows users change value (probably increase ), order see (almost) classes. already mentioned Sorting Objects, extent column internally stored list, can explicitly control printed format.extent argument. options can passed print.data.frame function (necessarily useful). summary method shares specific arguments print except max.rows. , options can passed summary.data.frame function.","code":"os <- objects.summary(\"package:datasets\", what = c(\"dat\", \"ext\", \"obj\"),                        all.classes = TRUE, order = object.size, reverse = TRUE) print(os, data.class.width = 25, max.rows = 12) #>                               data.class   extent object.size #> treering                              ts     7980       64304 #> EuStockMarkets    mts, ts, matrix, array 1860 x 4       60824 #> volcano                    matrix, array  87 x 61       42672 #> quakes                        data.frame 1000 x 5       33232 #> sunspot.month                         ts     3177       25880 #> sunspots                              ts     2820       23024 #> ChickWeight    nfnGroupedData, nfGro....  578 x 4       22696 #> infert                        data.frame  248 x 8       16064 #> attenu                        data.frame  182 x 5       15648 #> Seatbelts         mts, ts, matrix, array  192 x 8       13872 #> Loblolly       nfnGroupedData, nfGro....   84 x 3       12120 #> randu                         data.frame  400 x 3       10584 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 92 rows ]  multi_class_objects <- row.names(objects.summary(\"package:datasets\", all.classes = TRUE,                                                   filter =  sapply(data.class, length) > 1L)) os <- objects.summary(\"package:datasets\", names = multi_class_objects, all.classes = TRUE,                        what = c(\"dat\", \"ext\", \"obj\")) print(os, data.class.width = 32, max.rows = 12) #>                                      data.class   extent object.size #> ChickWeight    nfnGroupedData, nfGroupedDat....  578 x 4       22696 #> CO2            nfnGroupedData, nfGroupedDat....   84 x 5        9976 #> DNase          nfnGroupedData, nfGroupedDat....  176 x 3        8256 #> euro.cross                        matrix, array  11 x 11        2944 #> EuStockMarkets           mts, ts, matrix, array 1860 x 4       60824 #> freeny.x                          matrix, array   39 x 4        2008 #> Indometh       nfnGroupedData, nfGroupedDat....   66 x 3        5904 #> Loblolly       nfnGroupedData, nfGroupedDat....   84 x 3       12120 #> Orange         nfnGroupedData, nfGroupedDat....   35 x 3        5232 #> Seatbelts                mts, ts, matrix, array  192 x 8       13872 #> stack.x                           matrix, array   21 x 3        1168 #> state.x77                         matrix, array   50 x 8        7672 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 5 rows ] multi_dim_objects <- row.names(objects.summary(\"package:datasets\", all.classes = TRUE,                                                 data.class = c(\"array\", \"table\"))) os <- objects.summary(\"package:datasets\", names = multi_dim_objects,                        what = c(\"dat\", \"ext\", \"obj\")) print(os[rev(order(sapply(os$extent, length))), ],        format.extent = TRUE, max.rows = 12) # default #>                       data.class        extent object.size #> Titanic                    table 4 x 2 x 2 x 2        2152 #> UCBAdmissions              table     2 x 2 x 6        1992 #> iris3                      array    50 x 4 x 3        5816 #> HairEyeColor               table     4 x 4 x 2        2040 #> WorldPhones               matrix         7 x 7        1800 #> volcano                   matrix       87 x 61       42672 #> VADeaths                  matrix         5 x 4        1264 #> USPersonalExpenditure     matrix         5 x 5        1448 #> state.x77                 matrix        50 x 8        7672 #> stack.x                   matrix        21 x 3        1168 #> Seatbelts                    mts       192 x 8       13872 #> occupationalStatus         table         8 x 8        2288 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 4 rows ] print(os[rev(order(sapply(os$extent, length))), ],        format.extent = FALSE, max.rows = 12) #>                       data.class     extent object.size #> Titanic                    table 4, 2, 2, 2        2152 #> UCBAdmissions              table    2, 2, 6        1992 #> iris3                      array   50, 4, 3        5816 #> HairEyeColor               table    4, 4, 2        2040 #> WorldPhones               matrix       7, 7        1800 #> volcano                   matrix     87, 61       42672 #> VADeaths                  matrix       5, 4        1264 #> USPersonalExpenditure     matrix       5, 5        1448 #> state.x77                 matrix      50, 8        7672 #> stack.x                   matrix      21, 3        1168 #> Seatbelts                    mts     192, 8       13872 #> occupationalStatus         table       8, 8        2288 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 4 rows ] print(objects.summary(\"package:datasets\", what = c(\"dat\", \"typ\", \"ext\", \"obj\")),        format.extent = TRUE, max.rows = 12, right = FALSE, quote = TRUE) #>               data.class   typeof   extent    object.size #> ability.cov   \"list\"       \"list\"   \"3\"       \" 2136\"     #> airmiles      \"ts\"         \"double\" \"24\"      \"  656\"     #> AirPassengers \"ts\"         \"double\" \"144\"     \" 1616\"     #> airquality    \"data.frame\" \"list\"   \"153 x 6\" \" 5632\"     #> anscombe      \"data.frame\" \"list\"   \"11 x 8\"  \" 2592\"     #> attenu        \"data.frame\" \"list\"   \"182 x 5\" \"15648\"     #> attitude      \"data.frame\" \"list\"   \"30 x 7\"  \" 3176\"     #> austres       \"ts\"         \"double\" \"89\"      \" 1176\"     #> beaver1       \"data.frame\" \"list\"   \"114 x 4\" \" 4736\"     #> beaver2       \"data.frame\" \"list\"   \"100 x 4\" \" 4288\"     #> BJsales       \"ts\"         \"double\" \"150\"     \" 1664\"     #> BJsales.lead  \"ts\"         \"double\" \"150\"     \" 1664\"     #>  [ reached 'max' / getOption(\"max.print\") -- omitted 92 rows ] os <- objects.summary(\"package:datasets\", all.classes = TRUE, what = c(\"dat\", \"ext\", \"obj\"),                       filter = sapply(data.class, length) > 1L) summary(os, data.class.width = 32, format.extent = FALSE) #>                             data.class     extent    object.size    #>                     matrix, array:8       5, 4: 1   Min.   : 1168   #>            mts, ts, matrix, array:2       5, 5: 1   1st Qu.: 2008   #>  nfnGroupedData, nfGroupedDat....:7       7, 7: 1   Median : 7672   #>                                          21, 3: 1   Mean   :12344   #>                                          35, 3: 1   3rd Qu.:12120   #>                                          39, 4: 1   Max.   :60824   #>                                        (Other):11 summary(os, data.class.width = 32, maxsum = 10, quantile.type = 5) #>                             data.class      extent   object.size    #>                     matrix, array:8    11 x 11 :1   Min.   : 1168   #>            mts, ts, matrix, array:2    132 x 5 :1   1st Qu.: 1956   #>  nfnGroupedData, nfGroupedDat....:7    176 x 3 :1   Median : 7672   #>                                        1860 x 4:1   Mean   :12344   #>                                        192 x 8 :1   3rd Qu.:12558   #>                                        21 x 3  :1   Max.   :60824   #>                                        35 x 3  :1                   #>                                        39 x 4  :1                   #>                                        5 x 4   :1                   #>                                        (Other) :8"},{"path":"https://zivankaraman.github.io/osum/articles/osum.html","id":"options","dir":"Articles","previous_headings":"","what":"Options","title":"Introduction to osum","text":"custom options dedicated package. function osum.options, crafted base package options, allows user set examine . custom options mainly allow providing default values specific arguments print summary methods (data.class.width, format.extent, max.rows), seen Printing Summarizing. also possible select information returned default function objects.summary. must subset c(\"data.class\", \"storage.mode\", \"mode\", \"typeof\", \"extent\", \"object.size\"), partial matching allowed. Created 2024-08-19.","code":"# see all current options osum.options() #> $osum.format.extent #> [1] TRUE #>  #> $osum.information #> [1] \"data.class\"   \"storage.mode\" \"mode\"         \"typeof\"       \"extent\"       #> [6] \"object.size\" # set some values old_opt <- osum.options(osum.data.class.width = 12, osum.max.rows = 25) # previous values of the changed 'osum' options old_opt #> $osum.data.class.width #> NULL #>  #> $osum.max.rows #> NULL # set which attributes are retrieved by default osum.options(osum.information = c(\"dat\", \"mod\", \"ext\", \"obj\")) # get the current value of the option osum.options(\"osum.information\") #> $osum.information #> [1] \"data.class\"  \"mode\"        \"extent\"      \"object.size\" # if the argument 'what' is not specified, the new default values are used objects.summary(\"package:base\", filter = data.class != \"function\") #>                   data.class      mode extent object.size #> F                    logical   logical      1          56 #> letters            character character     26        1712 #> LETTERS            character character     26        1712 #> month.abb          character character     12         848 #> month.name         character character     12         880 #> pi                   numeric   numeric      1          56 #> R.version        simple.list      list     14        3168 #> R.version.string   character character      1         136 #> T                    logical   logical      1          56 #> version          simple.list      list     14        3168"},{"path":"https://zivankaraman.github.io/osum/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zivan Karaman. Author, maintainer, copyright holder.","code":""},{"path":"https://zivankaraman.github.io/osum/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karaman Z (2024). osum: Provide Summary Information R Objects. doi:10.32614/CRAN.package.osum, https://zivankaraman.github.io/osum/.","code":"@Manual{R-osum,   title = {{osum}: Provide Summary Information About R Objects},   doi = {10.32614/CRAN.package.osum},   author = {Zivan Karaman},   year = {2024},   version = {0.1.0},   url = {https://zivankaraman.github.io/osum/},   abstract = {Inspired by S-PLUS function objects.summary, provides a function with the same name that returns data class, storage mode, mode, type, dimension, and size information for R objects in the specified environment. Various filtering and sorting options are also proposed.}, }"},{"path":"https://zivankaraman.github.io/osum/index.html","id":"osum-","dir":"","previous_headings":"","what":"Provide Summary Information About R Objects","title":"Provide Summary Information About R Objects","text":"Provide Summary Information R Objects","code":""},{"path":"https://zivankaraman.github.io/osum/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Provide Summary Information About R Objects","text":"Inspired S-PLUS™ function ‘objects.summary’, provides function name returns data.frame data class, storage mode, mode, typeof, dimension, size information R objects specified environment. Various filtering sorting options also proposed, well custom print summary methods options.","code":""},{"path":[]},{"path":"https://zivankaraman.github.io/osum/index.html","id":"stable-version","dir":"","previous_headings":"Installation","what":"Stable version","title":"Provide Summary Information About R Objects","text":"can install current stable version osum CRAN: Windows macOS binary packages available .","code":"install.packages(\"osum\")"},{"path":"https://zivankaraman.github.io/osum/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Provide Summary Information About R Objects","text":"can install development version osum including latest features GitHub:","code":"# install.packages(\"remotes\") remotes::install_github(\"zivankaraman/osum\")"},{"path":"https://zivankaraman.github.io/osum/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Provide Summary Information About R Objects","text":"Read Get started learn use package.","code":""},{"path":"https://zivankaraman.github.io/osum/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Provide Summary Information About R Objects","text":"package released GPL-3.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Information About R Objects — objects.summary","title":"Summary Information About R Objects — objects.summary","text":"Returns data class, storage mode, mode, typeof, dimensions, size information R objects specified environment.  invoked argument top-level prompt, objects.summary shows data sets functions user defined current session. invoked argument inside function, objects.summary returns information function's local variables: can useful conjunction browser.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Information About R Objects — objects.summary","text":"","code":"objects.summary(where, all.objects = FALSE, pattern, names. = NULL,     what = getOption(\"osum.information\", default = c(\"data.class\", \"storage.mode\",         \"mode\", \"typeof\", \"extent\", \"object.size\")),     all.classes = FALSE, data.class. = NULL, storage.mode. = NULL, mode. = NULL,     typeof. = NULL, filter., order., reverse = FALSE)"},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Information About R Objects — objects.summary","text":"environment use listing available objects. Defaults current environment. argument can specify environment form; see ‘Details’ section. .objects logical value. TRUE, information objects returned. FALSE, information objects whose names begin . omitted. Default: FALSE pattern optional regular expression.  names matching pattern returned.  glob2rx can used convert wildcard patterns regular expressions. names. optional character vector naming objects summarize. Default: NULL character vector specifying information return. can subset c(\"data.class\", \"storage.mode\", \"mode\", \"typeof\", \"extent\", \"object.size\"), order. default return six types information, order shown. subject partial matching, , enough initial letters string element needed guarantee unique recognition. .classes logical flag specifying whether entire class vector object just first element used, selection based argument data.class returned summary. bearing objects class attribute. default first class element used. data.class. character vector data classes (see data.class). Selects objects belonging one named data classes. .classes=TRUE, element object's class attribute considered, just first. storage.mode. character vector storage modes (see storage.mode). Selects objects one named storage modes. mode. character vector modes (see mode). Selects objects one named modes. typeof. character vector types (see typeof). Selects objects one named types. filter. logical expression indicating elements (rows) keep: missing values taken false. Note expression evaluated data frame object attributes, columns referred (name) variables expression (see examples). argument crafted select argument base subset function. order. expression involving (unquoted) attributes names, controlling sort order object entries (printed rows) summary. example, order=object.size means sort objects increasing values object.size component summary. order=c(data.class, -object.size) means sort objects alphabetically data.class, decreasing values object.size. order omitted, entries sorted alphabetically object name. argument crafted arguments base order function. attribute names used filter order expressions must fully specified (partial matching possible). reverse logical flag: TRUE, final sort order reversed, even order depends object names (different original S-PLUS function). Default: FALSE","code":""},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Information About R Objects — objects.summary","text":"object (S3) class \"objects.summary\", inherits class \"data.frame\". components (printed columns) specified argument . component contains one type information selected objects. following: data.class factor (.classes=FALSE), list character  vectors (.classes=TRUE) containing data class information. defined  function data.class, exception .classes=TRUE, summary  contain entire class attribute object one, whereas function data.class  returns first element vector. storage.mode factor giving storage mode information, returned function storage.mode. mode factor giving mode information, returned function mode. typeof factor giving R internal type storage mode information, returned function typeof. extent list, whose components numeric vector giving dimension object, length dimensionless. object.size numeric vector giving object sizes bytes, returned function object.size. purpose dedicated class objects.summary provide customized print summary methods.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Information About R Objects — objects.summary","text":"argument can specify environment object names taken one several forms: integer (position search list); character string name element search list; explicit environment (including using sys.frame access currently active function calls). default, environment call objects.summary used. Unless explicit environment provided, argument designate element search list. However, character form \"package:pkg_name\" package named \"pkg_name\" installed, silently loaded, objects retrieved, unloaded function exits. Depending time takes load package, execution might slower getting information attached package. possible use attributes returned (listed ) filter order expressions.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary Information About R Objects — objects.summary","text":"TIBCO Spotfire S+® 8.2 Function Guide, November 2010, TIBCO Software Inc.","code":""},{"path":[]},{"path":"https://zivankaraman.github.io/osum/reference/objects.summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Information About R Objects — objects.summary","text":"","code":"if (interactive()) {     .Ob <- 1     a <- letters[1:5]     x <- rnorm(20)     i <- 1:10     l <- list(a = a, i = i, x = x)     df <- iris     arr <- iris3     myfunc <- function() {ls()}     objects.summary()     objects.summary(pattern = \"O\")     objects.summary(pattern = \"O\", all.objects = TRUE)      objects.summary(mode = \"function\")     objects.summary(\"package:grDevices\", filter = mode != \"function\")     objects.summary(\"package:datasets\", all.classes = TRUE,         filter = sapply(data.class, length) > 1)     # shows an empty list because inside myfunc no variables are defined     myfunc <- function() {objects.summary()}     myfunc()      # define a local variable inside myfunc     myfunc <- function() {y <- 1; objects.summary()}     myfunc()                # shows \"y\" }"},{"path":"https://zivankaraman.github.io/osum/reference/osum.options.html","id":null,"dir":"Reference","previous_headings":"","what":"Options Settings for Package osum — osum.options","title":"Options Settings for Package osum — osum.options","text":"function enables users customize review specific options osum package.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/osum.options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Options Settings for Package osum — osum.options","text":"","code":"osum.options(   osum.data.class.width,   osum.format.extent,   osum.information,   osum.max.rows )"},{"path":"https://zivankaraman.github.io/osum/reference/osum.options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Options Settings for Package osum — osum.options","text":"osum.data.class.width integer indicating width data.class field list (objects.summary called .classes = TRUE). osum.format.extent logical indicating whether extent field formatted product (d1 x d2) left list (d1, d2). Default: TRUE osum.information character vector specifying information return default. can subset c(\"data.class\", \"storage.mode\", \"mode\", \"typeof\", \"extent\", \"object.size\"), order. default return six types information, order shown. osum.information subject partial matching, , enough initial letters string element needed guarantee unique recognition. osum.max.rows integer, maximal number rows print.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/osum.options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Options Settings for Package osum — osum.options","text":"osum.options(), list osum package options sorted name. osum.options(name), list length one containing set value, NULL unset.  uses setting one options, list previous values options changed (returned invisibly).","code":""},{"path":"https://zivankaraman.github.io/osum/reference/osum.options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Options Settings for Package osum — osum.options","text":"Invoking osum.options() arguments returns list current values osum package options. access value single option, one can pass character string name name argument, e.g. osum.options(\"osum.max.rows\"), return named list length one option's value.","code":""},{"path":[]},{"path":"https://zivankaraman.github.io/osum/reference/osum.options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Options Settings for Package osum — osum.options","text":"","code":"if (interactive()) {     old_opt <- osum.options(osum.data.class.width = 12, osum.max.rows = 25)     cat(\"current values of all 'osum' options:\", sep = \"\\n\")     print(osum.options())     cat(\"previous values of the changed 'osum' options:\", sep = \"\\n\")     print(old_opt) }"},{"path":"https://zivankaraman.github.io/osum/reference/print.objects.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for objects.summary Objects — print.objects.summary","title":"Print Method for objects.summary Objects — print.objects.summary","text":"Print object class objects.summary specific formatting options using print.data.frame.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/print.objects.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for objects.summary Objects — print.objects.summary","text":"","code":"# S3 method for class 'objects.summary' print(   x,   ...,   data.class.width = getOption(\"osum.data.class.width\", default = NULL),   format.extent = getOption(\"osum.format.extent\", default = TRUE),   max.rows = getOption(\"osum.max.rows\", default = NULL) )"},{"path":"https://zivankaraman.github.io/osum/reference/print.objects.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for objects.summary Objects — print.objects.summary","text":"x object class objects.summary ... arguments passed print.data.frame (include max) data.class.width integer indicating width data.class field list (objects.summary called .classes = TRUE). Default: getOption(\"osum.data.class.width\", default = NULL) format.extent logical indicating whether extent field formatted product (d1 x d2) left list (d1, d2). Default: getOption(\"osum.format.extent\", default = TRUE) max.rows integer, maximal number rows print. Default: getOption(\"osum.max.rows\", default = NULL)","code":""},{"path":"https://zivankaraman.github.io/osum/reference/print.objects.summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Method for objects.summary Objects — print.objects.summary","text":"max.rows computes adequate value passed max argument print.data.frame. default, NULL, getOption(\"max.print\") used print.data.frame.","code":""},{"path":[]},{"path":"https://zivankaraman.github.io/osum/reference/print.objects.summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for objects.summary Objects — print.objects.summary","text":"","code":"if (interactive()) {     print(objects.summary(\"package:datasets\", all.classes = FALSE),         format.extent = FALSE, max.rows = 6)     print(objects.summary(\"package:datasets\", all.classes = TRUE, data.class = \"array\"),         data.class.width = 22, format.extent = TRUE, max.rows = 6) }"},{"path":"https://zivankaraman.github.io/osum/reference/summary.objects.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for objects.summary Objects — summary.objects.summary","title":"Summary Method for objects.summary Objects — summary.objects.summary","text":"Summarize object class objects.summary specific formatting options using summary.data.frame.","code":""},{"path":"https://zivankaraman.github.io/osum/reference/summary.objects.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for objects.summary Objects — summary.objects.summary","text":"","code":"# S3 method for class 'objects.summary' summary(   object,   ...,   data.class.width = getOption(\"osum.data.class.width\", default = NULL),   format.extent = getOption(\"osum.format.extent\", default = TRUE) )"},{"path":"https://zivankaraman.github.io/osum/reference/summary.objects.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for objects.summary Objects — summary.objects.summary","text":"object object class objects.summary ... arguments passed summary.data.frame data.class.width integer indicating width data.class field list (objects.summary called .classes = TRUE). Default: getOption(\"osum.data.class.width\", default = NULL) format.extent logical indicating whether extent field formatted product (d1 x d2) left list (d1, d2). Default: getOption(\"osum.format.extent\", default = TRUE)","code":""},{"path":"https://zivankaraman.github.io/osum/reference/summary.objects.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for objects.summary Objects — summary.objects.summary","text":"matrix class  \"table\", obtained applying summary column object (applying specific formatting according arguments' values) collating results.","code":""},{"path":[]},{"path":"https://zivankaraman.github.io/osum/reference/summary.objects.summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for objects.summary Objects — summary.objects.summary","text":"","code":"if (interactive()) {     os <- objects.summary(\"package:datasets\")     print(summary(os, format.extent = FALSE, maxsum = 10, quantile.type = 7))     print(summary(os, format.extent = TRUE, maxsum = 12, quantile.type = 1)) }"}]
